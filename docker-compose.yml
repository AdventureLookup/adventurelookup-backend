version: "2"
services:
  api:
    restart: always
    build: ./web
    links:
      - postgres
      - redis
    volumes:
      - ./web/:/app
      - static:/app/static
    env_file: .env
    environment:
      - VIRTUAL_HOST=${BASE_DOMAIN}
      - LETSENCRYPT_HOST=${BASE_DOMAIN}
      - LETSENCRYPT_EMAIL=admin@${BASE_DOMAIN}

  redis:
    image: redis
    restart: always
    volumes:
      - $DATA_DIR/redis:/data

  nginx:
    image: nginx
    restart: always
    volumes:
      - /etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - static:/usr/share/nginx/html
      - ./nginx/static.conf:/etc/nginx/vhost.d/default:ro
      - $DATA_DIR/certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      - "443:443"

  nginx_gen:
    image: jwilder/docker-gen
    restart: always
    volumes_from:
      - nginx
    volumes:
      - ./nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    command: "-notify-sighup ${COMPOSE_PROJECT_NAME}_nginx_1 -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes_from:
      - nginx
    volumes:
      - $DATA_DIR/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=${COMPOSE_PROJECT_NAME}_nginx_gen_1

  postgres:
    image: postgres
    restart: always
    volumes:
      - $DATA_DIR/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=$DB_PASS
      - POSTGRES_USER=$DB_USER
      - POSTGRES_DB=$DB_NAME

volumes:
  static:
    driver: local
